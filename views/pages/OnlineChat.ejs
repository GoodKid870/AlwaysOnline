<!DOCTYPE html>
<head>
    <%- include('../partials/head'); %>
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
    <style>
        body {
            margin: 0;
            background: linear-gradient(-45deg, #003973, #E5E5BE);
            background-size: 400% 400%;
            animation: gradient 10s ease infinite;
        }

        @keyframes gradient {
            0% {
                background-position: 0 50%;
            }
            50% {
                background-position: 100% 50%;
            }
            100% {
                background-position: 0 50%;
            }
        }

        .jumbotron {
            background-color: rgba(255, 255, 255, 0.7);
            padding: 3rem;
            border-radius: 1rem;
            box-shadow: 0 0 1rem rgb(0 0 0 / 50%)
        }
        .navbar {
            margin: 20px 0;
            border-radius: 10px;
            background-color: rgba(255, 255, 255, 0.7);
            box-shadow: 0 0 1rem rgb(0 0 0 / 50%);
        }
        p {
            font-size: 1.5rem;
            margin-bottom: 1rem;
            font-style: oblique;
            font-family: "Helvetica Neue", cursive;
        }
    </style>
</head>
<body class="container">

<header>
    <nav class="navbar navbar-expand-lg navbar-light">
        <a class="navbar-brand" href="/">AlwaysOnline</a>
        <a class="navbar-brand" href="/news" id="news">Новости</a>
        <a class="navbar-brand" href="/messages" id="message">Сообщения</a>
        <a class="navbar-brand" href="/addfriend" id="friends">Пользователи</a>
        <a class="navbar-brand" onclick="localStorage.clear()" href="/logout">выйти</a>
        <a class="navbar-brand"  href="/profile"><%=login%></a>
        <div class="t706__product-del">
            <img class="profile-image" id="profile-image" style="width: 58.5px; height: 58.5px; object-fit: cover; border-radius: 50%" src="<%=avatar%>">
        </div>
    </nav>
</header>
<main>
    <div class="jumbotron">
        <div class="container">
            <div class="card p-3">
                <div id="messages" style="height: 400px; overflow-y: scroll;">
                    <% if(chat.length > 0) { %> <% chat.forEach((el) => { %>
                    <div class="message-container-right">
                        <img class="message-avatar" src="<%=el.avatar%>">
                        <div class="message-username message-sent"><%=el.senderName%></div>
                        <div class="message-content message-sent"><%=el.content%></div>
                    </div>
                    <% }) %> <% } %>
                </div>
            </div>
        </div>
            <div class="input-group mt-3">
                <input type="text" class="form-control" name="wsMessageInput" id="wsMessageInput" placeholder="Набери сообщение...">
                <div class="input-group-append">
                    <button class="btn btn-primary" id="wsSendButton" type="submit">Отправить</button>
                </div>
            </div>
        </div>
    </div>
</main>
<footer>
    <%- include('../partials/footer'); %>
</footer>
</body>
<script>
    // // Получаем модальное окно и элементы в нем
    // const modal = document.getElementById("errorModal");
    // const modalText = document.getElementById("errorMessage");
    // const closeBtn = document.getElementsByClassName("close")[0];
    //
    // // Функция, которая показывает модальное окно с заданным текстом
    // function showErrorModal(text) {
    //     modalText.textContent = text;
    //     modal.style.display = "block";
    // }
    //
    // // Закрываем модальное окно при клике на кнопку "закрыть"
    // closeBtn.onclick = function() {
    //     modal.style.display = "none";
    //     location.reload()
    // }
    //
    // // Закрываем модальное окно при клике на область вокруг него
    // window.onclick = function(event) {
    //     if (event.target == modal) {
    //         modal.style.display = "none";
    //     }
    // }
    async function sessionUser() {
        try {
            const response = await fetch('/start-chat?to=<%=to%>');
            if (response.ok) {
                const data = await response.json();
                if (data.code == 1) {
                    // Отобразить сообщение об ошибке и перейти на страницу логина
                    window.location.href = "/login";
                    showErrorMessage(data.response);
                } else {
                    // Перезагрузить страницу
                    location.reload();
                }
            } else {
                // Обработать ошибку HTTP
                showErrorMessage(`Ошибка HTTP: ${response.status} ${response.statusText}`);
            }
        } catch (error) {
            // Обработать ошибку сети или парсинга JSON
            showErrorMessage(`Ошибка: ${error.message}`);
        }
    }

    function showErrorMessage(message) {
        // Отобразить сообщение об ошибке, например, в модальном окне или уведомлении
        console.error(message);
    }


    (function () {
        const messages = document.querySelector('#messages');
        const wsSendButton = document.querySelector('#wsSendButton');
        let ws;
        ws = new WebSocket(`ws://${location.host}`);
        ws.onerror = function () {
            console.log('WebSocket error');
        };
        ws.onopen = function () {
            console.log('WebSocket connection established');
            const data = {chatId: "<%=to%>"};
            ws.send(JSON.stringify(data));
        };
        ws.onclose = function () {
            console.log('WebSocket connection closed');
            ws = null;
        };
        ws.onmessage = function (event) {
            const data = JSON.parse(event.data);
            showMessage(data);
        };
        document.addEventListener('keydown', function (event) {
            if (event.key === "Enter") {
                document.querySelector('#wsSendButton').click();
            }
        });

        function showMessage(message) {
            const messageContent = message.content;
            const isSender = message.senderId === 'me';
            const messageDirection = isSender ? 'right' : 'left';
            const messageClass = isSender ? 'message-sent' : 'message-received';

            const messageContainer = document.createElement('div');
            messageContainer.classList.add(`message-container-${messageDirection}`);

            const avatarImg = document.createElement('img');
            avatarImg.classList.add('message-avatar');
            avatarImg.src = message.avatar;

            const messageContentDiv = document.createElement('div');
            messageContentDiv.classList.add('message-content', messageClass);
            messageContentDiv.textContent = messageContent;

            const usernameDiv = document.createElement('div');
            usernameDiv.classList.add('message-username', messageClass);
            usernameDiv.textContent = message.senderName;

            messageContainer.appendChild(avatarImg);
            messageContainer.appendChild(usernameDiv);
            messageContainer.appendChild(messageContentDiv);

            messages.appendChild(messageContainer);
            messages.scrollTop = messages.scrollHeight;

        }


        ws.onopen = function () {
            console.log('WebSocket connection established');
        };

        function init() {
            wsSendButton.onclick = function () {
                if (!ws) {
                    showMessage('No WebSocket connection');
                    return;
                }

                const message = document.querySelector('#wsMessageInput').value;
                ws.send(JSON.stringify({ senderId: 'me', content: message, recipientId: <%= to %>, avatar: '<%=avatar%>', senderName: '<%=login%>', chatId: `chat_${<%=userId%>}_${<%=to%>}`, timestamp: new Date()}));
                showMessage({ senderId: 'me', content: message, avatar: '<%=avatar%>', senderName: '<%=login%>' });
                document.querySelector('#wsMessageInput').value = ''
            };
        }
        init();
    })();
</script>
<!doctype html>
